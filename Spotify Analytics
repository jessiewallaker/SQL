--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.

--Next, I answered these questions using the following SQL. 

--What artist released the longest song?
SELECT MAX(duration_ms), artist_name, track_name AS song
FROM BIT_DB.Spotifydata

--What songs have 120+ beats per minute?
SELECT artist_name, track_name, tempo
FROM BIT_DB.Spotifydata
WHERE tempo > 120
ORDER BY artist_name asc
LIMIT 10

--I calculated the average popularity for the artists in the Spotify data table using CTE.
Then, for every artist with an average popularity of 90 or above, I showed their name, average popularit and labeled them as a "Top Star".
WITH popularity_average_CTE AS (
SELECT s.artist_name, AVG(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name
)
SELECT artist_name, average_popularity,'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity >=90
